name: github actions

on: 
  push: 
    branches:
      - main

env:
  S3_BUCKET_NAME: inflearn-s3
  CODE_DEPLOY_APPLICATION_NAME: inflearn-codeDeploy 
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: inflearn-codeDeploy-group
  SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
  SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
  GOOGLE_EMAIL_ACCOUNT: ${{ secrets.GOOGLE_EMAIL_ACCOUNT }}
  GOOGLE_EMAIL_PASSWORD: ${{ secrets.GOOGLE_EMAIL_PASSWORD }}
  NAVER_EMAIL_ACCOUNT: ${{ secrets.NAVER_EMAIL_ACCOUNT }}
  NAVER_EMAIL_PASSWORD: ${{ secrets.NAVER_EMAIL_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:stable
        options: --privileged

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Setup MySQL
        uses: samin/mysql-action@v1
        with:
          character set server: 'utf8'
          mysql database: inflearn
          mysql user: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          mysql password: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}


      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

      - name: Make zip 
        run: zip -r ./$GITHUB_SHA .
        shell: bash
        
      - name: AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip
        
      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
          
