<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.inflearn.infra.mapper.post.PostMapper">
  <select id="search" resultType="com.example.inflearn.domain.post.PostDto">
    select p.id as postId,
           m.nickname,
           p.title,
           p.contents,
           p.view_count as viewCount,
           (select count(likes.id) from likes where p.id = likes.post_id) as likeCount,
           (select count(comment.id) from comment where p.id = comment.post_id) as commentCount,
           p.created_at as createdAt,
           p.post_status as postStatus
    from post p left join member m on p.member_id = m.id
    where match(title,contents) against(#{searchWord})
    <choose>
    <when test="sort.equalsIgnoreCase('comment')">
    order by commentCount desc
    </when>
    <when test="sort.equalsIgnoreCase('like')">
    order by likeCount desc</when><otherwise>order by p.id desc</otherwise></choose>limit #{offset},#{limit}
  </select>
</mapper>