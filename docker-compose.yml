version: "2.2"
services:
  inflearn-redis:
    container_name: inflearn-redis
    build:
      dockerfile: Dockerfile
      context: ./redis
    image: leeyoungjin/inflearn-redis
    ports:
      - "6379:6379"
    #    테스트용 CPU, 메모리 제한
    cpus: 0.5
    mem_limit: 1g
  inflearn-database:
    container_name: inflearn-database
    build:
      dockerfile: Dockerfile
      context: ./database
    image: leeyoungjin/inflearn-database
    environment:
      - MYSQL_DATABASE=inflearn
      - MYSQL_ROOT_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
    volumes:
      - ./database/config:/etc/mysql/conf.d
      - ./database/data:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    cpus: 0.5
    mem_limit: 1g
  inflearn-app:
    container_name: inflearn-app
    build: . # 도커파일이 있는 위치
    depends_on: # 컨테이너 실행순서 지정 DB와 레디스가 띄워져있는상태에서 app을 실행한다.
      - inflearn-database
      - inflearn-redis
    image: leeyoungjin/inflearn-app
    environment:
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - GOOGLE_EMAIL_ACCOUNT=${GOOGLE_EMAIL_ACCOUNT}
      - GOOGLE_EMAIL_PASSWORD=${GOOGLE_EMAIL_PASSWORD}
      - NAVER_EMAIL_ACCOUNT=${NAVER_EMAIL_ACCOUNT}
      - NAVER_EMAIL_PASSWORD=${NAVER_EMAIL_PASSWORD}
    ports:
      - "80:8080"
    restart: always # 레디스나 DB가 실행가능한 상태가 아닌경우있을수있는데 그경우에 재시작할수있도록 설정
    cpus: 1
    mem_limit: 2g

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/config:/etc/prometheus/
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
volumes:
  grafana-data:
  prometheus-data: